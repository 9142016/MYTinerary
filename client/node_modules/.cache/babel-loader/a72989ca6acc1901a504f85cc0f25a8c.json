{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItinerariesList.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getItineraries } from \"../store/actions/itinerariesActions\"; //component for showing lists of itineraries. the itinerary details page is a seperate component named ItineraryDetails\n\nclass ItinerariesList extends React.Component {\n  constructor(_ref) {\n    let match = _ref.match,\n        props = _objectWithoutProperties(_ref, [\"match\"]);\n\n    console.log(match.params);\n  }\n\n  componentDidMount() {// console.lot(this.props);\n    // this.props.getItineraries(this.props.match.params.cityName);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Itineraries List Dummy\"));\n  }\n\n} //grab cities from redux-store-state and save as params here under this.props.city\n\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries\n  };\n}; //store dispatch actions/methods in props here\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityName => dispatch(getItineraries(cityName))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ItinerariesList));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItinerariesList.js"],"names":["React","NavLink","withRouter","connect","getItineraries","ItinerariesList","Component","constructor","match","props","console","log","params","componentDidMount","render","mapStateToProps","state","itineraries","mapDispatchToProps","dispatch","cityName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,qCAA/B,C,CAEA;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,OAAsB;AAAA,QAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,QAATC,KAAS;;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAlB;AACD;;AACDC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF;AAMD;;AAf2C,C,CAiB9C;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAGD,CAJD,C,CAKA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLf,IAAAA,cAAc,EAAEgB,QAAQ,IAAID,QAAQ,CAACf,cAAc,CAACgB,QAAD,CAAf;AAD/B,GAAP;AAGD,CAJD;;AAKA,eAAejB,OAAO,CACpBY,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,UAAU,CAACG,eAAD,CAHG,CAAf","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItineraries } from \"../store/actions/itinerariesActions\";\r\n\r\n//component for showing lists of itineraries. the itinerary details page is a seperate component named ItineraryDetails\r\n\r\nclass ItinerariesList extends React.Component {\r\n  constructor({ match, ...props }) {\r\n    console.log(match.params);\r\n  }\r\n  componentDidMount() {\r\n    // console.lot(this.props);\r\n    // this.props.getItineraries(this.props.match.params.cityName);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Itineraries List Dummy</h1>\r\n        {/* <h2>{props.match.params.cityName + \"'s itineraries:\"}</h2> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//grab cities from redux-store-state and save as params here under this.props.city\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itineraries: state.itineraries\r\n  };\r\n};\r\n//store dispatch actions/methods in props here\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getItineraries: cityName => dispatch(getItineraries(cityName))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ItinerariesList));\r\n"]},"metadata":{},"sourceType":"module"}