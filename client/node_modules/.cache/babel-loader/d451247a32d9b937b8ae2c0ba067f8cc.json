{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass cities extends React.Component {\n  cityNamesBody() {\n    const cities = this.props.cities.cities;\n\n    if (cities) {\n      let body = [];\n      this.props.cities.forEach(city => {\n        body.push(React.createElement(\"h1\", {\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, city.name));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, body);\n    }\n  }\n\n  render() {\n    console.log(this.props.cities);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"cities Dummy\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(cities));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\Cities.js"],"names":["React","withRouter","connect","cities","Component","cityNamesBody","props","body","forEach","city","push","_id","name","render","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,aAAa,GAAG;AAAA,UACNF,MADM,GACK,KAAKG,KAAL,CAAWH,MADhB,CACNA,MADM;;AAEd,QAAIA,MAAJ,EAAY;AACV,UAAII,IAAI,GAAG,EAAX;AACA,WAAKD,KAAL,CAAWH,MAAX,CAAkBK,OAAlB,CAA0BC,IAAI,IAAI;AAChCF,QAAAA,IAAI,CAACG,IAAL,CAAU;AAAI,UAAA,GAAG,EAAED,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBF,IAAI,CAACG,IAAzB,CAAV;AACD,OAFD;AAGA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAML,IAAN,CAAP;AACD;AACF;;AAEDM,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWH,MAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAKD;;AAnBkC;;AAqBrC,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,MAAM,EAAEc,KAAK,CAACd;AADT,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACc,eAAD,CAAP,CAAyBf,UAAU,CAACE,MAAD,CAAnC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass cities extends React.Component {\r\n  cityNamesBody() {\r\n    const { cities } = this.props.cities;\r\n    if (cities) {\r\n      let body = [];\r\n      this.props.cities.forEach(city => {\r\n        body.push(<h1 key={city._id}>{city.name}</h1>);\r\n      });\r\n      return <div>{body}</div>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.cities);\r\n    return (\r\n      <div>\r\n        <h1>cities Dummy</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cities: state.cities\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(cities));\r\n"]},"metadata":{},"sourceType":"module"}