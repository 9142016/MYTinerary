{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\CitiesList.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getCities } from \"../store/actions/citiesActions\";\n\nclass CitiesList extends React.Component {\n  //function that creates styled divs per city\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  citiesBody() {\n    console.log(this.props.cities);\n  } //  {\n  //   if (this.props.cities.length > 1) {\n  //     let body = this.props.cities.map(city => {\n  //       return (\n  //         <div key={city._id}>\n  //           <NavLink to={\"/itineraries/\" + city.name}>\n  //             <h2>{city.name}</h2>\n  //             <img src={city.preview_img} alt=\"preview card for city\" />\n  //           </NavLink>\n  //         </div>\n  //       );\n  //     });\n  //     return body;\n  //   }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"All Cities\"), this.citiesBody());\n  }\n\n} //grab cities from redux-store-state and save as params here under this.props.city\n\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(getCities())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CitiesList));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\CitiesList.js"],"names":["React","NavLink","withRouter","connect","getCities","CitiesList","Component","componentDidMount","props","citiesBody","console","log","cities","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvC;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,SAAX;AACD;;AACDK,EAAAA,UAAU,GAAG;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACD,GAPsC,CAQvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKJ,UAAL,EAFH,CADF;AAMD;;AA/BsC,C,CAiCzC;;;AACA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,MAAM,EAAEG,KAAK,CAACH;AADT,GAAP;AAGD,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA,SAAS,EAAE,MAAMa,QAAQ,CAACb,SAAS,EAAV;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBW,eADoB,EAEpBE,kBAFoB,CAAP,CAGbd,UAAU,CAACG,UAAD,CAHG,CAAf","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCities } from \"../store/actions/citiesActions\";\r\n\r\nclass CitiesList extends React.Component {\r\n  //function that creates styled divs per city\r\n  componentDidMount() {\r\n    this.props.getCities();\r\n  }\r\n  citiesBody() {\r\n    console.log(this.props.cities);\r\n  }\r\n  //  {\r\n  //   if (this.props.cities.length > 1) {\r\n  //     let body = this.props.cities.map(city => {\r\n  //       return (\r\n  //         <div key={city._id}>\r\n  //           <NavLink to={\"/itineraries/\" + city.name}>\r\n  //             <h2>{city.name}</h2>\r\n  //             <img src={city.preview_img} alt=\"preview card for city\" />\r\n  //           </NavLink>\r\n  //         </div>\r\n  //       );\r\n  //     });\r\n  //     return body;\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>All Cities</h1>\r\n        {this.citiesBody()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//grab cities from redux-store-state and save as params here under this.props.city\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cities: state.cities\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCities: () => dispatch(getCities())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CitiesList));\r\n"]},"metadata":{},"sourceType":"module"}