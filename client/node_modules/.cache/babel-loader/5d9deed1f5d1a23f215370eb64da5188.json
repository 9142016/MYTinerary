{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItineraryDetails.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nclass Itinerary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch(\"/api/itineraries/\" + this.props.match.params.id + \"/comments\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      comments: res\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"load itineragfdgfdry details!\");\n  }\n\n}\n\nexport default withRouter(Itinerary); /////////////////////////// CSS /////////////////////////////\n// var mainDiv = {\n//   display: \"flex\",\n//   flexDirection: \"column\",\n//   //   flexWrap: \"nowrap\",\n//   justifyContent: \"center\",\n//   alignItems: \"center\"\n// };\n// var flexRowStyle = {\n//   display: \"flex\",\n//   flexDirection: \"row\",\n//   flexWrap: \"nowrap\",\n//   justifyContent: \"center\"\n// };\n// var imgs = {\n//   width: \"100%\"\n// };","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItineraryDetails.js"],"names":["React","NavLink","withRouter","Itinerary","Component","constructor","props","callBackendAPI","response","fetch","match","params","id","body","json","status","Error","message","state","comments","componentDidMount","then","res","setState","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,cAZmB,GAYF,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sBAAsB,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,GAAmD,WADzB,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;;AAEA,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAtBkB;;AAEjB,SAAKK,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKb,cAAL,GACGc,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAEG;AAAZ,KAAd,CADf,EAEGE,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAXqC,CAYtC;;;AAaAG,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACD;;AA3BqC;;AA8BxC,eAAe1B,UAAU,CAACC,SAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Itinerary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { comments: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ comments: res }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch(\r\n      \"/api/itineraries/\" + this.props.match.params.id + \"/comments\"\r\n    );\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message);\r\n    }\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    return <div>load itineragfdgfdry details!</div>;\r\n  }\r\n}\r\n\r\nexport default withRouter(Itinerary);\r\n\r\n/////////////////////////// CSS /////////////////////////////\r\n// var mainDiv = {\r\n//   display: \"flex\",\r\n//   flexDirection: \"column\",\r\n//   //   flexWrap: \"nowrap\",\r\n//   justifyContent: \"center\",\r\n//   alignItems: \"center\"\r\n// };\r\n\r\n// var flexRowStyle = {\r\n//   display: \"flex\",\r\n//   flexDirection: \"row\",\r\n//   flexWrap: \"nowrap\",\r\n//   justifyContent: \"center\"\r\n// };\r\n\r\n// var imgs = {\r\n//   width: \"100%\"\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}