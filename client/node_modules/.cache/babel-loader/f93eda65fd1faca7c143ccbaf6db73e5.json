{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItineraryDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ItineraryDetails extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Details Dummy\"), console.log(this.props.match.params.id), console.log(this.props.itinerary));\n  }\n\n} // grab cities from redux-store-state and save as params here under this.props.itinerary\n\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state.itineraries.ownProps.match.params.id);\n  return {\n    itinerary: state.itineraries.find(itinerary => itinerary._id === state.itineraries[ownProps.match.params.id])\n  };\n}; // const mapStateToProps = state => {\n//   return {\n//     itinerary: state.itineraries\n//   };\n// };\n\n\nexport default connect(mapStateToProps)(ItineraryDetails);","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItineraryDetails.js"],"names":["React","connect","ItineraryDetails","Component","render","console","log","props","match","params","id","itinerary","mapStateToProps","state","ownProps","itineraries","find","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC7CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGGC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC,CAHH,EAIGL,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWI,SAAvB,CAJH,CADF;AAUD;;AAZ4C,C,CAe/C;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CT,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACE,WAAN,CAAkBD,QAAlB,CAA2BN,KAA3B,CAAiCC,MAAjC,CAAwCC,EAApD;AACA,SAAO;AACLC,IAAAA,SAAS,EAAEE,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CACTL,SAAS,IAAIA,SAAS,CAACM,GAAV,KAAkBJ,KAAK,CAACE,WAAN,CAAkBD,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBC,EAAxC,CADtB;AADN,GAAP;AAKD,CAPD,C,CASA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,OAAO,CAACW,eAAD,CAAP,CAAyBV,gBAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ItineraryDetails extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Details Dummy</h1>\r\n        {/* {console.log(\"store id value:\", this.props.itinerary[0]._id)} */}\r\n        {console.log(this.props.match.params.id)}\r\n        {console.log(this.props.itinerary)}\r\n\r\n        {/* <p>{this.props.itinerary.title}</p> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// grab cities from redux-store-state and save as params here under this.props.itinerary\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state.itineraries.ownProps.match.params.id);\r\n  return {\r\n    itinerary: state.itineraries.find(\r\n      itinerary => itinerary._id === state.itineraries[ownProps.match.params.id]\r\n    )\r\n  };\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     itinerary: state.itineraries\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(ItineraryDetails);\r\n"]},"metadata":{},"sourceType":"module"}