{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass cities extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.citiesBody = () => {\n      const cities = this.props.cities.cities;\n\n      if (cities) {\n        let body = [];\n        this.props.cities.forEach(city => {\n          body.push(React.createElement(\"div\", {\n            key: city._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, city.name), React.createElement(\"img\", {\n            src: city.preview_img,\n            alt: \"preview card for city\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          })));\n        });\n        return {\n          body\n        };\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.cities);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"cities Dummy\"), this.citiesBody);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(cities));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\Cities.js"],"names":["React","withRouter","connect","cities","Component","citiesBody","props","body","forEach","city","push","_id","name","preview_img","render","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEnCC,UAFmC,GAEtB,MAAM;AAAA,YACTF,MADS,GACE,KAAKG,KAAL,CAAWH,MADb,CACTA,MADS;;AAEjB,UAAIA,MAAJ,EAAY;AACV,YAAII,IAAI,GAAG,EAAX;AACA,aAAKD,KAAL,CAAWH,MAAX,CAAkBK,OAAlB,CAA0BC,IAAI,IAAI;AAChCF,UAAAA,IAAI,CAACG,IAAL,CACE;AAAK,YAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,IAAI,CAACG,IAAV,CADF,EAEE;AAAK,YAAA,GAAG,EAAEH,IAAI,CAACI,WAAf;AAA4B,YAAA,GAAG,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAMD,SAPD;AAQA,eAAO;AAAEN,UAAAA;AAAF,SAAP;AACD;AACF,KAhBkC;AAAA;;AAkBnCO,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWH,MAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,KAAKE,UAFR,CADF;AAMD;;AA1BkC;;AA4BrC,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLf,IAAAA,MAAM,EAAEe,KAAK,CAACf;AADT,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACe,eAAD,CAAP,CAAyBhB,UAAU,CAACE,MAAD,CAAnC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass cities extends React.Component {\r\n  //function that creates styled divs per city\r\n  citiesBody = () => {\r\n    const { cities } = this.props.cities;\r\n    if (cities) {\r\n      let body = [];\r\n      this.props.cities.forEach(city => {\r\n        body.push(\r\n          <div key={city._id}>\r\n            <h3>{city.name}</h3>\r\n            <img src={city.preview_img} alt=\"preview card for city\" />\r\n          </div>\r\n        );\r\n      });\r\n      return { body };\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.cities);\r\n    return (\r\n      <div>\r\n        <h1>cities Dummy</h1>\r\n        {this.citiesBody}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cities: state.cities\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(cities));\r\n"]},"metadata":{},"sourceType":"module"}