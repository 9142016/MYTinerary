{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItinerariesList.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getItineraries } from \"../store/actions/itineraryActions\";\nimport \"./css/previewLists.css\"; //component for showing lists of itineraries. the itinerary details page is a seperate component named ItineraryDetails\n\nclass ItinerariesList extends React.Component {\n  componentDidMount() {\n    this.props.getItineraries(this.props.match.params.cityName);\n  } //function that creates styled divs per relevant itinerary\n\n\n  itinerariesBody() {\n    if (this.props.itineraries.length > 1) {\n      let body = this.props.itineraries.map(itinerary => {\n        return React.createElement(\"div\", {\n          className: \"cardbody\",\n          key: itinerary._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/itinerary/\" + itinerary._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, itinerary.title), React.createElement(\"span\", {\n          className: \"ratingAndPrice\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"\\u2606\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"\\u2606\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"\\u2606\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"\\u2606\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"\\u2606\")), React.createElement(\"span\", {\n          className: \"price\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, itinerary.price))), React.createElement(\"img\", {\n          src: itinerary.coverPhoto,\n          alt: \"cover for itinerary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })));\n      });\n      return body;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Itineraries List Dummy\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.match.params.cityName + \"'s itineraries:\"), this.itinerariesBody());\n  }\n\n} //grab cities from redux-store-state and save as params here under this.props.itineraries\n\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itineraries\n  };\n}; //store dispatch actions/methods in props here\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityName => dispatch(getItineraries(cityName))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ItinerariesList));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItinerariesList.js"],"names":["React","NavLink","withRouter","connect","getItineraries","ItinerariesList","Component","componentDidMount","props","match","params","cityName","itinerariesBody","itineraries","length","body","map","itinerary","_id","title","price","coverPhoto","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,OAAO,wBAAP,C,CAEA;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAC5CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,cAAX,CAA0B,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,QAAlD;AACD,GAH2C,CAK5C;;;AACAC,EAAAA,eAAe,GAAG;AAChB,QAAI,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,MAAvB,GAAgC,CAApC,EAAuC;AACrC,UAAIC,IAAI,GAAG,KAAKP,KAAL,CAAWK,WAAX,CAAuBG,GAAvB,CAA2BC,SAAS,IAAI;AACjD,eACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,GAAG,EAAEA,SAAS,CAACC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,EAAE,EAAE,gBAAgBD,SAAS,CAACC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,SAAS,CAACE,KAAf,CADF,EAEE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF,EAQE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,SAAS,CAACG,KAAf,CADF,CARF,CAFF,EAcE;AAAK,UAAA,GAAG,EAAEH,SAAS,CAACI,UAApB;AAAgC,UAAA,GAAG,EAAC,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF,CADF,CADF;AAoBD,OArBU,CAAX;AAsBA,aAAON,IAAP;AACD;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,QAAxB,GAAmC,iBAAxC,CAFF,EAGG,KAAKC,eAAL,EAHH,CADF;AAOD;;AA1C2C,C,CA4C9C;;;AACA,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,WAAW,EAAEW,KAAK,CAACX;AADd,GAAP;AAGD,CAJD,C,CAKA;;;AACA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLtB,IAAAA,cAAc,EAAEO,QAAQ,IAAIe,QAAQ,CAACtB,cAAc,CAACO,QAAD,CAAf;AAD/B,GAAP;AAGD,CAJD;;AAKA,eAAeR,OAAO,CACpBoB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbvB,UAAU,CAACG,eAAD,CAHG,CAAf","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItineraries } from \"../store/actions/itineraryActions\";\r\nimport \"./css/previewLists.css\";\r\n\r\n//component for showing lists of itineraries. the itinerary details page is a seperate component named ItineraryDetails\r\n\r\nclass ItinerariesList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getItineraries(this.props.match.params.cityName);\r\n  }\r\n\r\n  //function that creates styled divs per relevant itinerary\r\n  itinerariesBody() {\r\n    if (this.props.itineraries.length > 1) {\r\n      let body = this.props.itineraries.map(itinerary => {\r\n        return (\r\n          <div className=\"cardbody\" key={itinerary._id}>\r\n            <NavLink to={\"/itinerary/\" + itinerary._id}>\r\n              <h2>{itinerary.title}</h2>\r\n              <span className=\"ratingAndPrice\">\r\n                <span className=\"rating\">\r\n                  <span>☆</span>\r\n                  <span>☆</span>\r\n                  <span>☆</span>\r\n                  <span>☆</span>\r\n                  <span>☆</span>\r\n                </span>\r\n                <span className=\"price\">\r\n                  <h2>{itinerary.price}</h2>\r\n                </span>\r\n              </span>\r\n              <img src={itinerary.coverPhoto} alt=\"cover for itinerary\" />\r\n            </NavLink>\r\n          </div>\r\n        );\r\n      });\r\n      return body;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Itineraries List Dummy</h1>\r\n        <h2>{this.props.match.params.cityName + \"'s itineraries:\"}</h2>\r\n        {this.itinerariesBody()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//grab cities from redux-store-state and save as params here under this.props.itineraries\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itineraries: state.itineraries\r\n  };\r\n};\r\n//store dispatch actions/methods in props here\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getItineraries: cityName => dispatch(getItineraries(cityName))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ItinerariesList));\r\n"]},"metadata":{},"sourceType":"module"}