{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItineraryDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./css/itineraryDetails.css\";\nimport { addComment } from \"../store/actions/itineraryActions\"; // component displaying itinerary details page\n\nclass ItineraryDetails extends React.Component {\n  constructor() {\n    super();\n\n    this.submitCommentHandler = event => {\n      event.preventDefault();\n      var timestamp = new Date();\n      let ISOtimestamp = timestamp.toISOString(); // addComment expects (itineraryID, comment, timestamp)\n\n      this.props.addComment(this.props.itinerary._id, this.state.comment, ISOtimestamp);\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        comment: event.target.value\n      });\n    };\n\n    this.state = {\n      comment: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.itinerary.title)), React.createElement(\"img\", {\n      src: this.props.itinerary.coverPhoto,\n      alt: \"coverphoto for this itinerary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"In \", this.props.itinerary.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"rating: \", this.props.itinerary.rating), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"price: \", this.props.itinerary.price)), React.createElement(\"div\", {\n      className: \"activitiesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.itinerary.activities.map((activity, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" \\u2022 \", activity.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Cost:\", activity.cost, \". Duration: \", activity.duration, \" hours.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, activity.comments));\n    })), React.createElement(\"div\", {\n      className: \"commentsSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"createCommentForm\",\n      onSubmit: this.submitCommentHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Share your thoughts!\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"submitButton\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), this.props.itinerary.comments ? this.props.itinerary.comments.map(comment => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, comment.content), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"posted on: \", comment.timestamp));\n    }) : React.createElement(\"p\", {\n      className: \"noComments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Be the first to comment!\")));\n  }\n\n} // grab cities from redux-store-state and save as params here under this.props.itinerary\n\n\nconst mapStateToProps = state => {\n  return {\n    itineraryID: state.itineraries.currentItineraryID,\n    itinerary: state.itineraries.relevantItineraries.find(itinerary => itinerary._id === state.itineraries.currentItineraryID)\n  };\n}; //store dispatch actions/methods in props here\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: (itineraryID, comment, timestamp) => dispatch(addComment(itineraryID, comment, timestamp)),\n    saveCurrentItineraryID: id => {\n      dispatch({\n        type: \"ADD_CURRENT_ITINERARY_ID\",\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryDetails);","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItineraryDetails.js"],"names":["React","connect","addComment","ItineraryDetails","Component","constructor","submitCommentHandler","event","preventDefault","timestamp","Date","ISOtimestamp","toISOString","props","itinerary","_id","state","comment","myChangeHandler","setState","target","value","componentDidMount","window","scrollTo","render","title","coverPhoto","city","rating","price","activities","map","activity","index","name","cost","duration","comments","content","mapStateToProps","itineraryID","itineraries","currentItineraryID","relevantItineraries","find","mapDispatchToProps","dispatch","saveCurrentItineraryID","id","type"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./css/itineraryDetails.css\";\r\nimport { addComment } from \"../store/actions/itineraryActions\";\r\n\r\n// component displaying itinerary details page\r\n\r\nclass ItineraryDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { comment: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n  submitCommentHandler = event => {\r\n    event.preventDefault();\r\n    var timestamp = new Date();\r\n    let ISOtimestamp = timestamp.toISOString();\r\n\r\n    // addComment expects (itineraryID, comment, timestamp)\r\n    this.props.addComment(\r\n      this.props.itinerary._id,\r\n      this.state.comment,\r\n      ISOtimestamp\r\n    );\r\n  };\r\n  myChangeHandler = event => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <h1>{this.props.itinerary.title}</h1>\r\n        </div>\r\n        <img\r\n          src={this.props.itinerary.coverPhoto}\r\n          alt=\"coverphoto for this itinerary\"\r\n        />\r\n        <span className=\"details\">\r\n          <h3>In {this.props.itinerary.city}</h3>\r\n          <p>rating: {this.props.itinerary.rating}</p>\r\n          <p>price: {this.props.itinerary.price}</p>\r\n        </span>\r\n\r\n        <div className=\"activitiesContainer\">\r\n          {this.props.itinerary.activities.map((activity, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <h2> • {activity.name}</h2>\r\n                <h3>\r\n                  Cost:{activity.cost}. Duration: {activity.duration} hours.\r\n                </h3>\r\n                <p>{activity.comments}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"commentsSection\">\r\n          <form\r\n            className=\"createCommentForm\"\r\n            onSubmit={this.submitCommentHandler}\r\n          >\r\n            <h2>Comments</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Share your thoughts!\"\r\n              onChange={this.myChangeHandler}\r\n            />\r\n            <input className=\"submitButton\" type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n          {this.props.itinerary.comments ? (\r\n            this.props.itinerary.comments.map(comment => {\r\n              return (\r\n                <div>\r\n                  <p>{comment.content}</p>\r\n                  <h5>posted on: {comment.timestamp}</h5>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <p className=\"noComments\">Be the first to comment!</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// grab cities from redux-store-state and save as params here under this.props.itinerary\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itineraryID: state.itineraries.currentItineraryID,\r\n    itinerary: state.itineraries.relevantItineraries.find(\r\n      itinerary => itinerary._id === state.itineraries.currentItineraryID\r\n    )\r\n  };\r\n};\r\n//store dispatch actions/methods in props here\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: (itineraryID, comment, timestamp) =>\r\n      dispatch(addComment(itineraryID, comment, timestamp)),\r\n    saveCurrentItineraryID: id => {\r\n      dispatch({ type: \"ADD_CURRENT_ITINERARY_ID\", id: id });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n\r\n  mapDispatchToProps\r\n)(ItineraryDetails);\r\n"]},"metadata":{},"sourceType":"module"}