{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItineraryDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./css/itineraryDetails.css\";\nimport { addComment } from \"../store/actions/itineraryActions\"; // component displaying itinerary details page\n\nclass ItineraryDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitCommentHandler = event => {\n      var timestamp = new Date();\n      let ISOtimestamp = timestamp.toISOString(); // get cities expects (itineraryID, comment, timestamp)\n\n      this.props.getCities(this.props.itinerary._id, event.target.value, ISOtimestamp);\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.itinerary.title)), React.createElement(\"img\", {\n      src: this.props.itinerary.coverPhoto,\n      alt: \"coverphoto for this itinerary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"In \", this.props.itinerary.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"rating: \", this.props.itinerary.rating), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"price: \", this.props.itinerary.price)), React.createElement(\"div\", {\n      className: \"activitiesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.itinerary.activities.map((activity, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" \\u2022 \", activity.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Cost:\", activity.cost, \". Duration: \", activity.duration, \" hours.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, activity.comments));\n    })), React.createElement(\"div\", {\n      className: \"commentsSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"createCommentForm\",\n      action: \"/action_page.php\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Share your thoughts!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Submit\")), this.props.itinerary.comments ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"There are comments. \") : React.createElement(\"p\", {\n      className: \"noComments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Be the first to comment!\")));\n  }\n\n} // grab cities from redux-store-state and save as params here under this.props.itinerary\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itinerary: state.itineraries.find(itinerary => itinerary._id === ownProps.match.params.id)\n  };\n}; //store dispatch actions/methods in props here\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: () => dispatch(addComment())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryDetails);","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItineraryDetails.js"],"names":["React","connect","addComment","ItineraryDetails","Component","submitCommentHandler","event","timestamp","Date","ISOtimestamp","toISOString","props","getCities","itinerary","_id","target","value","componentDidMount","window","scrollTo","render","title","coverPhoto","city","rating","price","activities","map","activity","index","name","cost","duration","comments","mapStateToProps","state","ownProps","itineraries","find","match","params","id","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./css/itineraryDetails.css\";\r\nimport { addComment } from \"../store/actions/itineraryActions\";\r\n\r\n// component displaying itinerary details page\r\n\r\nclass ItineraryDetails extends React.Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n  submitCommentHandler = event => {\r\n    var timestamp = new Date();\r\n    let ISOtimestamp = timestamp.toISOString();\r\n\r\n    // get cities expects (itineraryID, comment, timestamp)\r\n    this.props.getCities(\r\n      this.props.itinerary._id,\r\n      event.target.value,\r\n      ISOtimestamp\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <h1>{this.props.itinerary.title}</h1>\r\n        </div>\r\n        <img\r\n          src={this.props.itinerary.coverPhoto}\r\n          alt=\"coverphoto for this itinerary\"\r\n        />\r\n        <span className=\"details\">\r\n          <h3>In {this.props.itinerary.city}</h3>\r\n          <p>rating: {this.props.itinerary.rating}</p>\r\n          <p>price: {this.props.itinerary.price}</p>\r\n        </span>\r\n\r\n        <div className=\"activitiesContainer\">\r\n          {this.props.itinerary.activities.map((activity, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <h2> â€¢ {activity.name}</h2>\r\n                <h3>\r\n                  Cost:{activity.cost}. Duration: {activity.duration} hours.\r\n                </h3>\r\n                <p>{activity.comments}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"commentsSection\">\r\n          <form className=\"createCommentForm\" action=\"/action_page.php\">\r\n            <h2>Comments</h2>\r\n\r\n            <input type=\"text\" placeholder=\"Share your thoughts!\" />\r\n            <button>Submit</button>\r\n          </form>\r\n          {this.props.itinerary.comments ? (\r\n            <p>There are comments. </p>\r\n          ) : (\r\n            <p className=\"noComments\">Be the first to comment!</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// grab cities from redux-store-state and save as params here under this.props.itinerary\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    itinerary: state.itineraries.find(\r\n      itinerary => itinerary._id === ownProps.match.params.id\r\n    )\r\n  };\r\n};\r\n//store dispatch actions/methods in props here\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addComment: () => dispatch(addComment())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ItineraryDetails);\r\n"]},"metadata":{},"sourceType":"module"}