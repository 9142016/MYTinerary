{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nclass cities extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch(\"/api/cities\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      cities: null\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      cities: res\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  renderCitiesList() {\n    if (this.state.cities) {\n      return React.createElement(\"div\", {\n        style: mainDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.cities.map((city, i) => React.createElement(NavLink, {\n        to: \"/itineraries/\" + city.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        key: i,\n        src: city.preview_img,\n        style: imgs,\n        alt: city.name + \"preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))));\n    }\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Loading tasks...\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"cities Dummy\"), this.renderCitiesList());\n  }\n\n}\n\nexport default withRouter(cities); /////////////////////////// CSS /////////////////////////////\n\nvar mainDiv = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\"\n};\nvar imgs = {\n  width: \"48%\",\n  padding: \"1%\"\n};","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\Cities.js"],"names":["React","NavLink","withRouter","cities","Component","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","componentDidMount","then","res","setState","catch","err","console","log","renderCitiesList","mainDiv","map","city","i","name","preview_img","imgs","render","display","flexDirection","flexWrap","justifyContent","width","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,cAXmB,GAWF,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAnBkB;;AAEjB,SAAKK,KAAL,GAAa;AAAEZ,MAAAA,MAAM,EAAE;AAAV,KAAb;AACD;;AACDa,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKT,cAAL,GACGU,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEhB,MAAAA,MAAM,EAAEe;AAAV,KAAd,CADf,EAEGE,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAVkC,CAWnC;;;AAUAG,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKT,KAAL,CAAWZ,MAAf,EAAuB;AACrB,aACE;AAAK,QAAA,KAAK,EAAEsB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWZ,MAAX,CAAkBuB,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,KACrB,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAE,kBAAkBD,IAAI,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAED,CADP;AAEE,QAAA,GAAG,EAAED,IAAI,CAACG,WAFZ;AAGE,QAAA,KAAK,EAAEC,IAHT;AAIE,QAAA,GAAG,EAAEJ,IAAI,CAACE,IAAL,GAAY,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,CADH,CADF;AAcD;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,KAAKR,gBAAL,EAFH,CADF;AAMD;;AAjDkC;;AAoDrC,eAAetB,UAAU,CAACC,MAAD,CAAzB,C,CAEA;;AACA,IAAIsB,OAAO,GAAG;AACZQ,EAAAA,OAAO,EAAE,MADG;AAEZC,EAAAA,aAAa,EAAE,KAFH;AAGZC,EAAAA,QAAQ,EAAE,MAHE;AAIZC,EAAAA,cAAc,EAAE;AAJJ,CAAd;AAOA,IAAIL,IAAI,GAAG;AACTM,EAAAA,KAAK,EAAE,KADE;AAETC,EAAAA,OAAO,EAAE;AAFA,CAAX","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass cities extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cities: null };\r\n  }\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ cities: res }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch(\"/api/cities\");\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message);\r\n    }\r\n    return body;\r\n  };\r\n  renderCitiesList() {\r\n    if (this.state.cities) {\r\n      return (\r\n        <div style={mainDiv}>\r\n          {this.state.cities.map((city, i) => (\r\n            <NavLink to={\"/itineraries/\" + city.name}>\r\n              <img\r\n                key={i}\r\n                src={city.preview_img}\r\n                style={imgs}\r\n                alt={city.name + \"preview\"}\r\n              />\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <p>Loading tasks...</p>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>cities Dummy</h1>\r\n        {this.renderCitiesList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(cities);\r\n\r\n/////////////////////////// CSS /////////////////////////////\r\nvar mainDiv = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  justifyContent: \"center\"\r\n};\r\n\r\nvar imgs = {\r\n  width: \"48%\",\r\n  padding: \"1%\"\r\n};\r\n"]},"metadata":{},"sourceType":"module"}