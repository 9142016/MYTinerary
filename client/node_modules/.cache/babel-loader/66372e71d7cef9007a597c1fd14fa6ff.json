{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\CitiesList.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass CitiesList extends React.Component {\n  //function that creates styled divs per city\n  citiesBody() {\n    if (this.props.cities) {\n      let body = [];\n      this.props.cities.forEach(city => {\n        body.push(React.createElement(NavLink, {\n          to: \"/itineraries/\" + city.name,\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, city.name), React.createElement(\"img\", {\n          src: city.preview_img,\n          alt: \"preview card for city\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        })));\n      });\n      return body;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"All Cities\"), this.citiesBody());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteCity: id => {\n      dispatch({\n        type: \"DELETE_CITY,_id:id\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CitiesList));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\CitiesList.js"],"names":["React","NavLink","withRouter","connect","CitiesList","Component","citiesBody","props","cities","body","forEach","city","push","name","_id","preview_img","render","mapStateToProps","state","mapDispatchToProps","dispatch","deleteCity","id","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvC;AACAC,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,UAAIC,IAAI,GAAG,EAAX;AACA,WAAKF,KAAL,CAAWC,MAAX,CAAkBE,OAAlB,CAA0BC,IAAI,IAAI;AAChCF,QAAAA,IAAI,CAACG,IAAL,CACE,oBAAC,OAAD;AAAS,UAAA,EAAE,EAAE,kBAAkBD,IAAI,CAACE,IAApC;AAA0C,UAAA,GAAG,EAAEF,IAAI,CAACG,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,IAAI,CAACE,IAAV,CADF,EAEE;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACI,WAAf;AAA4B,UAAA,GAAG,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAMD,OAPD;AAQA,aAAON,IAAP;AACD;AACF;;AACDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKV,UAAL,EAFH,CADF;AAMD;;AAvBsC;;AAyBzC,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,MAAM,EAAEU,KAAK,CAACV;AADT,GAAP;AAGD,CAJD;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,UAAU,EAAEC,EAAE,IAAI;AAChBF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,eAAepB,OAAO,CACpBc,eADoB,EAEpBE,kBAFoB,CAAP,CAGbjB,UAAU,CAACE,UAAD,CAHG,CAAf","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CitiesList extends React.Component {\r\n  //function that creates styled divs per city\r\n  citiesBody() {\r\n    if (this.props.cities) {\r\n      let body = [];\r\n      this.props.cities.forEach(city => {\r\n        body.push(\r\n          <NavLink to={\"/itineraries/\" + city.name} key={city._id}>\r\n            <h2>{city.name}</h2>\r\n            <img src={city.preview_img} alt=\"preview card for city\" />\r\n          </NavLink>\r\n        );\r\n      });\r\n      return body;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>All Cities</h1>\r\n        {this.citiesBody()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cities: state.cities\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteCity: id => {\r\n      dispatch({ type: \"DELETE_CITY,_id:id\" });\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CitiesList));\r\n"]},"metadata":{},"sourceType":"module"}