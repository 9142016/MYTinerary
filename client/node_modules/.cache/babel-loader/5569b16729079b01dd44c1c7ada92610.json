{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\MYtinerary\\\\client\\\\src\\\\components\\\\ItineraryDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ItineraryDetails extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, this.props.itinerary.title), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"In \", this.props.itinerary.city, \",by \", this.props.itinerary.userName), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  }\n\n} // grab cities from redux-store-state and save as params here under this.props.itinerary\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itinerary: state.itineraries.find(itinerary => itinerary._id === ownProps.match.params.id)\n  };\n}; // const mapStateToProps = state => {\n//   return {\n//     itinerary: state.itineraries\n//   };\n// };\n\n\nexport default connect(mapStateToProps)(ItineraryDetails);","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\components\\ItineraryDetails.js"],"names":["React","connect","ItineraryDetails","Component","render","props","itinerary","title","city","userName","mapStateToProps","state","ownProps","itineraries","find","_id","match","params","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC7CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,KAA1B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACM,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,IAD3B,UACqC,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,QAD1D,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAX4C,C,CAc/C;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLN,IAAAA,SAAS,EAAEK,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CACTR,SAAS,IAAIA,SAAS,CAACS,GAAV,KAAkBH,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBC,EAD5C;AADN,GAAP;AAKD,CAND,C,CAQA;AACA;AACA;AACA;AACA;;;AAEA,eAAejB,OAAO,CAACS,eAAD,CAAP,CAAyBR,gBAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ItineraryDetails extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.props.itinerary.title}</h1>\r\n        <h3>\r\n          In {this.props.itinerary.city},by {this.props.itinerary.userName}\r\n        </h3>\r\n        <p></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// grab cities from redux-store-state and save as params here under this.props.itinerary\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    itinerary: state.itineraries.find(\r\n      itinerary => itinerary._id === ownProps.match.params.id\r\n    )\r\n  };\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     itinerary: state.itineraries\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(ItineraryDetails);\r\n"]},"metadata":{},"sourceType":"module"}