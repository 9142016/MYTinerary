{"ast":null,"code":"function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport const getItineraries = payload => {\n  let ifPayload = payload ? \"/byCity/\" + payload : \"\";\n  return dispatch => {\n    return fetch(\"/api/itineraries\" + ifPayload).then(handleErrors).then(res => res.json()).then(itineraries => {\n      dispatch({\n        type: \"FETCH_ITINERARIES\",\n        payload: itineraries\n      });\n    });\n  };\n}; // send new comment to API. API will return the updated full itinerary object.\n// dispatch to UPDATE_ITINERARY with the returned, updated itinerary object\n\nexport const addComment = (itineraryID, comment, timestamp) => {\n  let commentToSend = {\n    content: comment,\n    timestamp: timestamp\n  }; // return dispatch => {\n\n  return fetch(\"/api/itineraries/\" + itineraryID, {\n    method: \"PUT\",\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(commentToSend) // body data type must match \"Content-Type\" header\n    // })\n    //   .then(handleErrors)\n    //   .then(response => response.json()) // parses JSON response into native JavaScript objects\n    //   .then(response => {\n    //     dispatch({\n    //       type: \"UPDATE_ITINERARY\",\n    //       payload: {\n    //         updatedItinerary: response,\n    //         itineraryID: itineraryID\n    //       }\n    //     });\n\n  }); // };\n};","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\MYtinerary\\client\\src\\store\\actions\\itineraryActions.js"],"names":["handleErrors","response","ok","Error","statusText","getItineraries","payload","ifPayload","dispatch","fetch","then","res","json","itineraries","type","addComment","itineraryID","comment","timestamp","commentToSend","content","method","headers","body","JSON","stringify"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,SAAOH,QAAP;AACD;;AAED,OAAO,MAAMI,cAAc,GAAGC,OAAO,IAAI;AACvC,MAAIC,SAAS,GAAGD,OAAO,GAAG,aAAaA,OAAhB,GAA0B,EAAjD;AACA,SAAOE,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,qBAAqBF,SAAtB,CAAL,CACJG,IADI,CACCV,YADD,EAEJU,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFR,EAGJF,IAHI,CAGCG,WAAW,IAAI;AACnBL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,mBADC;AAEPR,QAAAA,OAAO,EAAEO;AAFF,OAAD,CAAR;AAID,KARI,CAAP;AASD,GAVD;AAWD,CAbM,C,CAeP;AACA;;AACA,OAAO,MAAME,UAAU,GAAG,CAACC,WAAD,EAAcC,OAAd,EAAuBC,SAAvB,KAAqC;AAC7D,MAAIC,aAAa,GAAG;AAClBC,IAAAA,OAAO,EAAEH,OADS;AAElBC,IAAAA,SAAS,EAAEA;AAFO,GAApB,CAD6D,CAM7D;;AACA,SAAOT,KAAK,CAAC,sBAAsBO,WAAvB,EAAoC;AAC9CK,IAAAA,MAAM,EAAE,KADsC;AAC/B;AACfC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT,CAEP;;AAFO,KAFqC;AAM9CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,aAAf,CANwC,CAMV;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjB8C,GAApC,CAAZ,CAP6D,CA0B7D;AACD,CA3BM","sourcesContent":["function handleErrors(response) {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\n\r\nexport const getItineraries = payload => {\r\n  let ifPayload = payload ? \"/byCity/\" + payload : \"\";\r\n  return dispatch => {\r\n    return fetch(\"/api/itineraries\" + ifPayload)\r\n      .then(handleErrors)\r\n      .then(res => res.json())\r\n      .then(itineraries => {\r\n        dispatch({\r\n          type: \"FETCH_ITINERARIES\",\r\n          payload: itineraries\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n// send new comment to API. API will return the updated full itinerary object.\r\n// dispatch to UPDATE_ITINERARY with the returned, updated itinerary object\r\nexport const addComment = (itineraryID, comment, timestamp) => {\r\n  let commentToSend = {\r\n    content: comment,\r\n    timestamp: timestamp\r\n  };\r\n\r\n  // return dispatch => {\r\n  return fetch(\"/api/itineraries/\" + itineraryID, {\r\n    method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    body: JSON.stringify(commentToSend) // body data type must match \"Content-Type\" header\r\n    // })\r\n    //   .then(handleErrors)\r\n    //   .then(response => response.json()) // parses JSON response into native JavaScript objects\r\n    //   .then(response => {\r\n    //     dispatch({\r\n    //       type: \"UPDATE_ITINERARY\",\r\n    //       payload: {\r\n    //         updatedItinerary: response,\r\n    //         itineraryID: itineraryID\r\n    //       }\r\n    //     });\r\n  });\r\n  // };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}