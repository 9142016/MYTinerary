{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Documents\\\\0 My ACTUAL Documents\\\\0 learning IT\\\\0Ubiqum\\\\MERN\\\\New folder\\\\client\\\\src\\\\components\\\\Navbar.js\";\nimport React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./css/navbar.css\";\n\nconst Navbar = props => {\n  //display icon if user is not on the home page\n  let homeLink = props.location.pathname !== \"/\" ? React.createElement(NavLink, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconStyle\",\n    src: require(\"../imgs/homeIcon.png\"),\n    alt: \"homeIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })) : null; // profile/sign in img + link\n  // link changes depending on value of redux-state isSignedIn\n\n  let signInOrProfileRedirect = props.isSignedIn ? React.createElement(NavLink, {\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    className: \"iconStyle\",\n    src: require(\"../imgs/user.png\"),\n    alt: \"profileIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) : React.createElement(NavLink, {\n    to: \"/signIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    className: \"iconStyle\",\n    src: require(\"../imgs/user.png\"),\n    alt: \"profileIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })); // returns a different className/style depending on current link path\n\n  let classNameValue = props.location.pathname === \"/\" ? \"navbar-maindiv-white\" : \"navbar-maindiv-colored\";\n  return React.createElement(\"div\", {\n    className: classNameValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, homeLink), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, signInOrProfileRedirect));\n}; //grab cities from redux-store-state and save as params here under this.props.city\n\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Navbar));","map":{"version":3,"sources":["C:\\Users\\ALON\\Documents\\0 My ACTUAL Documents\\0 learning IT\\0Ubiqum\\MERN\\New folder\\client\\src\\components\\Navbar.js"],"names":["React","NavLink","withRouter","connect","Navbar","props","homeLink","location","pathname","require","signInOrProfileRedirect","isSignedIn","classNameValue","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB;AACA,MAAIC,QAAQ,GACVD,KAAK,CAACE,QAAN,CAAeC,QAAf,KAA4B,GAA5B,GACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAEC,OAAO,CAAC,sBAAD,CAFd;AAGE,IAAA,GAAG,EAAC,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,GAQI,IATN,CAFsB,CAatB;AACA;;AACA,MAAIC,uBAAuB,GAAGL,KAAK,CAACM,UAAN,GAC5B,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAEF,OAAO,CAAC,kBAAD,CAFd;AAGE,IAAA,GAAG,EAAC,aAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAD4B,GAU5B,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAEA,OAAO,CAAC,kBAAD,CAFd;AAGE,IAAA,GAAG,EAAC,aAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CAfsB,CAmCtB;;AACA,MAAIG,cAAc,GAChBP,KAAK,CAACE,QAAN,CAAeC,QAAf,KAA4B,GAA5B,GACI,sBADJ,GAEI,wBAHN;AAKA,SACE;AAAK,IAAA,SAAS,EAAEI,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,QAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,uBAAP,CAFF,CADF;AAMD,CA/CD,C,CAiDA;;;AACA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,UAAU,EAAEG,KAAK,CAACH;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAACU,eAAD,CAAP,CAAyBX,UAAU,CAACE,MAAD,CAAnC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./css/navbar.css\";\r\n\r\nconst Navbar = props => {\r\n  //display icon if user is not on the home page\r\n  let homeLink =\r\n    props.location.pathname !== \"/\" ? (\r\n      <NavLink to=\"/\">\r\n        <img\r\n          className=\"iconStyle\"\r\n          src={require(\"../imgs/homeIcon.png\")}\r\n          alt=\"homeIcon\"\r\n        />\r\n      </NavLink>\r\n    ) : null;\r\n\r\n  // profile/sign in img + link\r\n  // link changes depending on value of redux-state isSignedIn\r\n  let signInOrProfileRedirect = props.isSignedIn ? (\r\n    <NavLink to=\"/profile\">\r\n      {\" \"}\r\n      <img\r\n        className=\"iconStyle\"\r\n        src={require(\"../imgs/user.png\")}\r\n        alt=\"profileIcon\"\r\n      />\r\n    </NavLink>\r\n  ) : (\r\n    <NavLink to=\"/signIn\">\r\n      {\" \"}\r\n      <img\r\n        className=\"iconStyle\"\r\n        src={require(\"../imgs/user.png\")}\r\n        alt=\"profileIcon\"\r\n      />\r\n    </NavLink>\r\n  );\r\n\r\n  // returns a different className/style depending on current link path\r\n  let classNameValue =\r\n    props.location.pathname === \"/\"\r\n      ? \"navbar-maindiv-white\"\r\n      : \"navbar-maindiv-colored\";\r\n\r\n  return (\r\n    <div className={classNameValue}>\r\n      <span>{homeLink}</span>\r\n      <span>{signInOrProfileRedirect}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n//grab cities from redux-store-state and save as params here under this.props.city\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(Navbar));\r\n"]},"metadata":{},"sourceType":"module"}